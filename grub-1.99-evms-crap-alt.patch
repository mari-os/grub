diff -urN grub2/grub-core/kern/emu/getroot.c grub2.new/grub-core/kern/emu/getroot.c
--- grub2/grub-core/kern/emu/getroot.c	2011-05-23 10:41:13 +0000
+++ grub2.new/grub-core/kern/emu/getroot.c	2011-05-23 10:39:35 +0000
@@ -529,6 +529,31 @@
 
 #endif /* __CYGWIN__ */
 
+static char * workaround_evms (char * os_dev)
+{
+  char * dest;
+  if (!os_dev) return NULL;
+  if (dest=strstr(os_dev,"/evms/lvm2/"))
+  {
+    strncpy(dest,"/mapper/",8);
+    memmove(dest+8,dest+11,strlen(dest+11)+1);
+    if (strchr(dest+8,'/')) *strchr(dest+8,'/')='-';
+  }
+  else if (dest=strstr(os_dev,"/evms/"))
+  {
+    memmove(dest,strstr(os_dev,"/evms/")+5,strlen(strstr(os_dev,"/evms/")+5)+1);
+  }
+  else if (dest=strstr(os_dev,"/mapper/sd"))
+  {
+    memmove(dest,strstr(os_dev,"/mapper/")+7,strlen(strstr(os_dev,"/mapper/")+7)+1);
+  }
+  else if (dest=strstr(os_dev,"/mapper/vd"))
+  {
+    memmove(dest,strstr(os_dev,"/mapper/")+7,strlen(strstr(os_dev,"/mapper/")+7)+1);
+  }
+  return os_dev;
+}
+
 char *
 grub_guess_root_device (const char *dir)
 {
@@ -596,6 +621,7 @@
 #ifdef __linux__
   if (!os_dev)
     os_dev = grub_find_root_device_from_mountinfo (dir, NULL);
+  workaround_evms(os_dev);
 #endif /* __linux__ */
 
 #if defined(HAVE_LIBZFS) && defined(HAVE_LIBNVPAIR)
@@ -627,6 +653,7 @@
 
   /* This might be truly slow, but is there any better way?  */
   os_dev = grub_find_device ("/dev", dev);
+  workaround_evms(os_dev);
 #endif
 #endif /* !__GNU__ */
 
@@ -900,6 +927,8 @@
       grub_dev = grub_util_biosdisk_get_grub_dev (os_dev);
     }
 
+  workaround_evms(grub_dev);
+
   return grub_dev;
 }
 
diff -urN grub2/util/grub-install.in grub2.new/util/grub-install.in
--- grub2/util/grub-install.in	2011-04-03 13:36:21 +0000
+++ grub2.new/util/grub-install.in	2011-05-23 10:43:30 +0000
@@ -458,13 +458,14 @@
 
 # Write device to a variable so we don't have to traverse /dev every time.
 grub_device="`"$grub_probe" --device-map="${device_map}" --target=device "${grubdir}"`" || exit 1
+grub_device_fs=`echo $grub_device | sed 's|/dev/mapper/\([sv]d\)|/dev/\1|g' `
 
 if ! test -f "${grubdir}"/grubenv; then
     "$grub_editenv" "${grubdir}"/grubenv create
 fi
 
 # Create the core image. First, auto-detect the filesystem module.
-fs_module="`"$grub_probe" --device-map="${device_map}" --target=fs --device "${grub_device}"`"
+fs_module="`"$grub_probe" --device-map="${device_map}" --target=fs --device "${grub_device_fs}"`"
 if test "x$fs_module" = x ; then
     echo "Auto-detection of a filesystem of ${grub_device} failed." 1>&2
     echo "Try with --recheck." 1>&2
@@ -524,7 +525,7 @@
     grub_drive="`echo "${grub_drive}" | sed -e s/,[a-z0-9,]*//g`"
     if [ "$disk_module" = ata ] || [ "x${grub_drive}" != "x${install_drive}" ] || ([ "x$platform" != xefi ] && [ "x$platform" != xpc ] && [ x"${target_cpu}-${platform}" != x"sparc64-ieee1275" ]) ; then
         # generic method (used on coreboot and ata mod)
-        uuid="`"$grub_probe" --device-map="${device_map}" --target=fs_uuid --device "${grub_device}"`"
+        uuid="`"$grub_probe" --device-map="${device_map}" --target=fs_uuid --device "${grub_device_fs}"`"
         if [ "x${uuid}" = "x" ] ; then
           if [ "x$platform" != xefi ] && [ "x$platform" != xpc ] && [ x"${target_cpu}-${platform}" != x"sparc64-ieee1275" ]; then
              echo "UUID needed with $platform, but the filesystem containing ${grubdir} does not support UUIDs." 1>&2
