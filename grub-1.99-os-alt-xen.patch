diff -urN grub2/util/grub.d/20_linux_xen.in grub2.new/util/grub.d/20_linux_xen.in
--- grub2/util/grub.d/20_linux_xen.in	2011-04-13 19:20:29 +0000
+++ grub2.new/util/grub.d/20_linux_xen.in	2011-05-23 12:11:54 +0000
@@ -28,11 +28,10 @@
 
 CLASS="--class gnu-linux --class gnu --class os --class xen"
 
-if [ "x${GRUB_DISTRIBUTOR}" = "x" ] ; then
-  OS=GNU/Linux
+if [ -r /etc/altlinux-release ]; then
+  OS=`cat /etc/altlinux-release | sed 's/ (.*$//g'`
 else
-  OS="${GRUB_DISTRIBUTOR} GNU/Linux"
-  CLASS="--class $(echo ${GRUB_DISTRIBUTOR} | tr 'A-Z' 'a-z' | cut -d' ' -f1) ${CLASS}"
+  OS=ALTLinux
 fi
 
 # loop-AES arranges things so that /dev/loop/X can be our root device, but
@@ -101,6 +100,9 @@
 EOF
 }
 
+[ ! -z $GRUB_VMLINUZ_SYMLINKS ] || GRUB_VMLINUZ_SYMLINKS="default"
+[ ! -z $GRUB_VMLINUZ_FAILSAFE ] || GRUB_VMLINUZ_FAILSAFE="default"
+
 linux_list=`for i in /boot/vmlinu[xz]-* /vmlinu[xz]-* /boot/kernel-*; do
     if grub_file_is_not_garbage "$i"; then
     	basename=$(basename $i)
@@ -119,7 +121,7 @@
 if [ "x${linux_list}" = "x" ] ; then
     exit 0
 fi
-xen_list=`for i in /boot/xen*; do
+xen_list=`for i in /boot/xen-*.*.*.gz; do
         if grub_file_is_not_garbage "$i" ; then echo -n "$i " ; fi
       done`
 prepare_boot_cache=
@@ -141,6 +143,18 @@
 	version=`echo $basename | sed -e "s,^[^0-9]*-,,g"`
 	alt_version=`echo $version | sed -e "s,\.old$,,g"`
 	linux_root_device_thisversion="${LINUX_ROOT_DEVICE}"
+	if [ -L "$linux" ]; then
+		if [ "x$GRUB_VMLINUZ_SYMLINKS" = "xno" ] || [ "x$GRUB_VMLINUZ_SYMLINKS" = "xfalse" ]; then
+			echo "skipping symlink: $linux" >&2
+			list=`echo $list | tr ' ' '\n' | grep -vx $linux | tr '\n' ' '`
+			continue
+		fi
+		if [ "$linux" != "/boot/vmlinuz" ] && [ "x$GRUB_VMLINUZ_SYMLINKS" = "xdefault" ]; then
+			echo "skipping symlink: $linux" >&2
+			list=`echo $list | tr ' ' '\n' | grep -vx $linux | tr '\n' ' '`
+			continue
+		fi
+	fi
 
 	initrd=
 	for i in "initrd.img-${version}" "initrd-${version}.img" \
@@ -162,9 +176,11 @@
 
 	linux_entry "${OS}" "${version}" "${xen_version}" false \
 	    "${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT}" "${GRUB_CMDLINE_XEN} ${GRUB_CMDLINE_XEN_DEFAULT}"
-	if [ "x${GRUB_DISABLE_RECOVERY}" != "xtrue" ]; then
-	    linux_entry "${OS}" "${version}" "${xen_version}" true \
-		"single ${GRUB_CMDLINE_LINUX}" "${GRUB_CMDLINE_XEN}"
+	if [ "x${GRUB_DISABLE_RECOVERY}" != "xtrue" ] && [ "x${GRUB_VMLINUZ_FAILSAFE}" != "xno" ] && [ "x${GRUB_VMLINUZ_FAILSAFE}" != "xfalse" ]; then
+		if [ $linux = "/boot/vmlinuz" ] || [ "x${GRUB_VMLINUZ_FAILSAFE}" != "xdefault" ]; then
+			linux_entry "${OS}" "${version}" "${xen_version}" true \
+				"single ${GRUB_CMDLINE_LINUX}" "${GRUB_CMDLINE_XEN}"
+		fi
 	fi
 
 	list=`echo $list | tr ' ' '\n' | grep -vx $linux | tr '\n' ' '`
