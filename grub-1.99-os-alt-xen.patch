diff -urN grub2/util/grub.d/20_linux_xen.in grub2.new/util/grub.d/20_linux_xen.in
--- grub2/util/grub.d/20_linux_xen.in	2011-04-13 19:20:29 +0000
+++ grub2.new/util/grub.d/20_linux_xen.in	2011-05-23 13:54:46 +0000
@@ -28,11 +28,10 @@
 
 CLASS="--class gnu-linux --class gnu --class os --class xen"
 
-if [ "x${GRUB_DISTRIBUTOR}" = "x" ] ; then
-  OS=GNU/Linux
+if [ -r /etc/altlinux-release ]; then
+  OS=`cat /etc/altlinux-release | sed 's/ (.*$//g' | sed "s, $,,"`
 else
-  OS="${GRUB_DISTRIBUTOR} GNU/Linux"
-  CLASS="--class $(echo ${GRUB_DISTRIBUTOR} | tr 'A-Z' 'a-z' | cut -d' ' -f1) ${CLASS}"
+  OS=ALTLinux
 fi
 
 # loop-AES arranges things so that /dev/loop/X can be our root device, but
@@ -67,12 +66,21 @@
   recovery="$4"
   args="$5"
   xen_args="$6"
-  if ${recovery} ; then
-    title="$(gettext_quoted "%s, with Xen %s and Linux %s (recovery mode)")"
+  if [ "x$version" != "xxen" ]; then 
+   if ${recovery} ; then
+     title="$(gettext_quoted "%s, with Xen %s and Linux %s (recovery mode)")"
+   else
+     title="$(gettext_quoted "%s, with Xen %s and Linux %s")"
+   fi
+  printf "menuentry '${title}' ${CLASS} {\n" "${os}" "${xen_version}" "${version}"
   else
-    title="$(gettext_quoted "%s, with Xen %s and Linux %s")"
+   if ${recovery} ; then
+     title="$(gettext_quoted "%s, with Xen default (recovery mode)")"
+   else
+     title="$(gettext_quoted "%s, with Xen default")"
+   fi
+   printf "menuentry '${title}' ${CLASS} {\n" "${os}"
   fi
-  printf "menuentry '${title}' ${CLASS} {\n" "${os}" "${xen_version}" "${version}"
   if ! ${recovery} ; then
       save_default_entry | sed -e "s/^/\t/"
   fi
@@ -101,7 +109,10 @@
 EOF
 }
 
-linux_list=`for i in /boot/vmlinu[xz]-* /vmlinu[xz]-* /boot/kernel-*; do
+[ ! -z $GRUB_VMLINUZ_SYMLINKS ] || GRUB_VMLINUZ_SYMLINKS="default"
+[ ! -z $GRUB_VMLINUZ_FAILSAFE ] || GRUB_VMLINUZ_FAILSAFE="default"
+
+linux_list=`ls -c1 /boot/vmlinu[z]-* | while read i; do
     if grub_file_is_not_garbage "$i"; then
     	basename=$(basename $i)
 	version=$(echo $basename | sed -e "s,^[^0-9]*-,,g")
@@ -113,13 +124,17 @@
 		break
 	    fi
 	done
-        if (grep -qx "CONFIG_XEN_DOM0=y" "${config}" 2> /dev/null || grep -qx "CONFIG_XEN_PRIVILEGED_GUEST=y" "${config}" 2> /dev/null); then echo -n "$i " ; fi
+	if [ $i = "/boot/vmlinuz-xen" ]; then
+		echo -n "$i "
+	elif (grep -qx "CONFIG_XEN_DOM0=y" "${config}" 2> /dev/null || grep -qx "CONFIG_XEN_PRIVILEGED_GUEST=y" "${config}" 2> /dev/null); then 
+		echo -n "$i " ; 
+	fi
     fi
     done`
 if [ "x${linux_list}" = "x" ] ; then
     exit 0
 fi
-xen_list=`for i in /boot/xen*; do
+xen_list=`for i in /boot/xen-*.*.*.gz; do
         if grub_file_is_not_garbage "$i" ; then echo -n "$i " ; fi
       done`
 prepare_boot_cache=
@@ -131,9 +146,8 @@
     xen_dirname=`dirname ${current_xen}`
     rel_xen_dirname=`make_system_path_relative_to_its_root $xen_dirname`
     xen_version=`echo $xen_basename | sed -e "s,.gz$,,g;s,^xen-,,g"`
-    echo "submenu \"Xen ${xen_version}\" {"
     while [ "x$list" != "x" ] ; do
-	linux=`version_find_latest $list`
+	linux=`echo $list | sed 's, .*,,g'`
 	echo "Found linux image: $linux" >&2
 	basename=`basename $linux`
 	dirname=`dirname $linux`
@@ -141,6 +155,18 @@
 	version=`echo $basename | sed -e "s,^[^0-9]*-,,g"`
 	alt_version=`echo $version | sed -e "s,\.old$,,g"`
 	linux_root_device_thisversion="${LINUX_ROOT_DEVICE}"
+	if [ -L "$linux" ]; then
+		if [ "x$GRUB_VMLINUZ_SYMLINKS" = "xno" ] || [ "x$GRUB_VMLINUZ_SYMLINKS" = "xfalse" ]; then
+			echo "skipping symlink: $linux" >&2
+			list=`echo $list | tr ' ' '\n' | grep -vx $linux | tr '\n' ' '`
+			continue
+		fi
+		if [ "$linux" != "/boot/vmlinuz-xen" ] && [ "x$GRUB_VMLINUZ_SYMLINKS" = "xdefault" ]; then
+			echo "skipping symlink: $linux" >&2
+			list=`echo $list | tr ' ' '\n' | grep -vx $linux | tr '\n' ' '`
+			continue
+		fi
+	fi
 
 	initrd=
 	for i in "initrd.img-${version}" "initrd-${version}.img" \
@@ -162,13 +188,14 @@
 
 	linux_entry "${OS}" "${version}" "${xen_version}" false \
 	    "${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT}" "${GRUB_CMDLINE_XEN} ${GRUB_CMDLINE_XEN_DEFAULT}"
-	if [ "x${GRUB_DISABLE_RECOVERY}" != "xtrue" ]; then
-	    linux_entry "${OS}" "${version}" "${xen_version}" true \
-		"single ${GRUB_CMDLINE_LINUX}" "${GRUB_CMDLINE_XEN}"
+	if [ "x${GRUB_DISABLE_RECOVERY}" != "xtrue" ] && [ "x${GRUB_VMLINUZ_FAILSAFE}" != "xno" ] && [ "x${GRUB_VMLINUZ_FAILSAFE}" != "xfalse" ]; then
+		if [ $linux = "/boot/vmlinuz" ] || [ "x${GRUB_VMLINUZ_FAILSAFE}" != "xdefault" ]; then
+			linux_entry "${OS}" "${version}" "${xen_version}" true \
+				"single ${GRUB_CMDLINE_LINUX}" "${GRUB_CMDLINE_XEN}"
+		fi
 	fi
 
 	list=`echo $list | tr ' ' '\n' | grep -vx $linux | tr '\n' ' '`
     done
-    echo "}"
     xen_list=`echo $xen_list | tr ' ' '\n' | grep -vx $current_xen | tr '\n' ' '`
 done
